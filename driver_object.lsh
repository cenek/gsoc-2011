(libload "libc/make")

(defclass problem object
)

(defmethod problem problem()
()
)

(defmethod problem fitness (g &optional (i 0))
   (declare (-idx1- (-uchar-)) g)
   (declare (-int-) i)
   ((idx-sum g))
)
(dhc-make-class () problem)
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
(defclass ga object
  ((-gptr-) pr)
)

(defmethod ga ga (p)
  (setq pr p)
)

(defmethod ga get_fitness (g)
  (declare (-idx1- (-uchar-)) g)
  (==> pr fitness g)
)
(dhc-make-class () ga)


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;testing passing object and calling routines
(defun test ()
  (let* ((ob_problem (new problem))
	 (ob_ga (new ga ob_problem))
	 (ret 0))
    (setq ret (==> ob_ga get_fitness [u 1 0 1 0 1 1 1]))
    (printf "Value is: %d \n" ret)
    (setq ret (==> ob_ga get_fitness [u 0 1 1 1 1 0 1 1 1 ]))
    (printf "Value is: %d \n" ret)
    ()
))


